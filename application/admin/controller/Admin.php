<?php
/**
 * Desc  ：Admin.php  RBAC用户管理
 * Author: Cool-T 😀
 * Since : V1.0
 * Date  : 2018/10/17
 */

namespace app\admin\controller;

use app\admin\model\AdminRole;
use app\admin\model\BgAnimate;
use app\admin\model\RoleAdmin;
use think\Db;
use think\db\Where;
use think\facade\Request;
use app\admin\model\Admin as AdminModel;

class Admin extends Base
{
    private $model;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->model = new AdminModel();
    }

    /**
     * 查询
     * @return \think\response\View
     */
    public function index()
    {
        //where条件
        $where = new Where();
        $where['id'] = [ 'neq', $this->superAdminId ];

        if( isset( $_GET['user_name'] ) && $_GET['user_name'] ) $where['user_name'] = [ 'like', "%{$_GET['user_name']}%" ];
        if( isset( $_GET['mobile'] ) && $_GET['mobile'] ) $where['mobile'] = $_GET['mobile'];
        if( isset( $_GET['email'] ) && $_GET['email'] ) $where['email'] = $_GET['email'];

        //查询数据
        $list = AdminModel::getList( $where, [ 'id' => 'desc' ] );
        $list = $list->each( function ( $val ){
            $roleName = AdminRole::getRoleName( $val['id'] );
            $val['roleName'] = implode( ',', $roleName );
            return $val;
        } );

        $this->assign('list', $list );
        return $this->fetch();
    }

    /**
     * 添加
     * @return array|bool|\think\response\View
     */
    public function add()
    {
        if( Request::isAjax() ){

            $errMsg = $this->validateData( 'Admin', $_POST );
            if( $errMsg ) return $errMsg;

            $_POST['password'] = md5( $_POST['password'] );

            $status = $this->model->save( $_POST );
            $this->endAction( $status, '添加管理员' );

        }else{
            $bgAnimate = BgAnimate::getSelect( [ 'status' => 1 ], 'id asc', 'id,key' );
            $this->assign( 'bgAnimate', $bgAnimate );
            return $this->fetch();
        }
    }

    /**
     * 修改
     * @return array|bool|\think\response\View
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function edit()
    {
        $id = input( 'id' );
        if( Request::isAjax() ){

            $errMsg = $this->validateData( 'Admin', $_POST );
            if( $errMsg ) return $errMsg;

            $status = $this->model->save( $_POST, [ 'id' => $id ] );
            $this->endAction( $status, '修改管理员' );

        }else{

            $data = $this->model->get( $id );

            $bgAnimate = BgAnimate::getSelect( [ 'status' => 1 ], 'id asc', 'id,key' );
            $this->assign( 'bgAnimate', $bgAnimate );

            $this->assign( 'data', $data );
            return $this->fetch();
        }
    }

    /**
     * 删除管理员
     */
    public function del()
    {
        //接收参数并验证
        $id = input( 'id' );
        if( !$id || !Request::isAjax() ) abort( 404, '页面不存在' );

        //删除数据
        Db::startTrans();
        try{
            AdminModel::destroy( $id );
            AdminRole::whereIn( 'user_id', $id )->delete();
            Db::commit();
            $this->endAction( true, '删除管理员' );
        }catch ( \Exception $e ){
            Db::rollback();
            $this->endAction( false, false, $e->getMessage() );
        }
    }

    /**
     * 修改指定字段值
     */
    public function setField()
    {
        if( !Request::isAjax() ) abort( 404, '页面不存在' );

        //接收参数
        $id = input( 'id' );
        $field = input( 'field' );
        $value = input( 'value' );

        $status = AdminModel::whereInSetField( 'id', $id, $field, $value );
        $this->endAction( $status, '修改管理员状态' );
    }

    /**
     * 角色设置
     * @return \think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function setRole()
    {
        if( !Request::isAjax() ) abort( 404, '页面不存在' );

        $type = input( 'type' );
        $id = input( 'id' );
        $where = [ 'user_id' => $id ];

        if( $type == 'get' ){
            //获取角色列表
            $roleIds = AdminRole::whereColumn( $where, 'role_id' );
            $role = RoleAdmin::getSelect( null,  null, 'id,name' );
            $role = $role->toArray();

            foreach ( $role as $key => $val ){
                if( in_array( $val['id'], $roleIds ) ){
                    $role[$key]['checked'] = true;
                }else{
                    $role[$key]['checked'] = false;
                }
            }

            return json( $role );
        }elseif( $type == 'set' ){
            //设置角色
            $data = input( 'data' );
            if( $data && count( $data ) > 0 ){
                Db::startTrans();
                try{
                    AdminRole::where( $where )->delete();
                    AdminRole::insertAll( $data );
                    Db::commit();
                    $status = true;
                }catch ( \Exception $e ){
                    Db::rollback();
                    $status = false;
                }
            }else{
                $status = AdminRole::where( $where )->delete();
            }

            $this->endAction( $status, '管理员角色设置' );
        }
    }
}














